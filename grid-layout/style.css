.container-pai {
    padding: 20px;
    height: 300px;
    border: solid black 2px;

     display: grid;
     grid-auto-rows: 80px; /*para grids criadas automaticamente fora do repeat*/
     grid-auto-flow: row; /*define se novos itens insertos no grid devem ser realocados ou em uma nova linha ou em uma nova coluna.*/
     /* a propriedade REPEAT permite com que possamos permitir a mesma unidade de fração pra cada coluna existente. */

     /* row-gap: 3px;
     column-gap: 5px; pode ser so gap mesmo */
     gap: 15px;
     grid-auto-rows:minmax(0.2fr, 1.2fr); /*estabelece o valor mínimo e máximo das faixas.*/

     grid-template-columns: repeat(2, 0.4fr); /*cada valor determinado por espaco é o tamanho de largura em cada coluna. a primeira coluna é maior */
     grid-template-rows: repeat(4, 1.2fr) /*tá vendo que aqui o comprimento da primeira linha é muito maior*/

     /* pode ser também apenas grid na ordem rows e columns */
     /* grid: repeat(4, 1.2fr) / repeat(2, 0.4fr); ; */


     /* Unidade de medida FR é FRACTION, significa que 1fr ocupa 1fração de espaço disponível no contâiner-pai. */
     
}

.container-filho {
    background-color: aqua;
    border: solid blue 2px;
}

.container-teste {
    background-color: rgb(233, 76, 191);
    border: solid rgb(20, 20, 88) 2px;
    grid-row-start: 2;  
   grid-row-end:3;  /* item começa na linha 2 e termina na linha 3 */
   grid-column-start: 2;
   grid-column-end: span 3; /* ocupa 3 espaços na grade */
}

.outro-teste{
      background-color: rgb(233, 210, 76);
    grid-area: 1/3/2/2; 
    /* row start, column start, row end, column end */
    /* começa na linha 1 e coluna 3, termina na linha 2 e coluna 2 */

    grid-template: repeat(3, 300px) / repeat(3, 1fr) ; /*define grid template rows, columns e areas ao mesmo tempo*/
}